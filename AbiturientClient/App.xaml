<Application x:Class="AbiturientClient.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:AbiturientClient.MVVM.View"
             xmlns:viewModel="clr-namespace:AbiturientClient.MVVM.ViewModel"
             StartupUri="./MVVM/View/InformationAndList.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <DataTemplate DataType="{x:Type viewModel:Authorisation}"/>

            <Style x:Key="ButtonTargetNonBackground" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border" Background="White" TextBlock.Foreground="{TemplateBinding Foreground}">
                                <ContentControl x:Name="ContentControl" Foreground="{TemplateBinding Foreground}">
                                    <TextBlock x:Name="TextBlock"><InlineUIContainer>
                                            <ContentPresenter Content="{TemplateBinding Content}"/>
                                        </InlineUIContainer></TextBlock>
                                </ContentControl>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ContentControl" Property="Foreground" Value="Blue"/>
                                    <Setter TargetName="TextBlock" Property="TextDecorations" Value="Underline"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            
            <Style x:Key="ButtonTargetNonOnlyBackground" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border" Background="{TemplateBinding Background}" TextBlock.Foreground="{TemplateBinding Foreground}">
                                <ContentControl x:Name="ContentControl" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <TextBlock x:Name="TextBlock"><InlineUIContainer>
                                            <ContentPresenter Content="{TemplateBinding Content}"/>
                                        </InlineUIContainer></TextBlock>
                                </ContentControl>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FF749ED3" Offset="0"/>
                                                <GradientStop Color="#FF2C93C3" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            
            <Style x:Key="RoundButton" TargetType="{x:Type Button}">
                <Style.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="25"/>
                    </Style>
                </Style.Resources>
            </Style>
            
            
            <Style x:Key="RoundImageOpasity" TargetType="{x:Type Image}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.5"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            
            <Style x:Key="ImageMouseOverCursorHand" TargetType="{x:Type Image}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Cursor" Value="Hand"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            
            <Style x:Key="ButtonMouseOverNonBackGround" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border" Background="{TemplateBinding Background}" TextBlock.Foreground="{TemplateBinding Foreground}">
                                <ContentControl x:Name="ContentControl" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <TextBlock x:Name="TextBlock"><InlineUIContainer>
                                            <ContentPresenter Content="{TemplateBinding Content}"/>
                                        </InlineUIContainer></TextBlock>
                                </ContentControl>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="White"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            
            <Style x:Key="LabelMouseOverColorRed" TargetType="{x:Type Label}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="Red"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            
        </ResourceDictionary>
    </Application.Resources>
</Application>
